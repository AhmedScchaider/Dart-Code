sudo: false

os:
  - osx
  - linux

language: node_js
node_js: lts/*

env:
  # travis encrypt "CHAT_WEBHOOK_PATH=\"/v1/xxx\""
  global:
    - secure: "dmD7OM5ermyaTZCdXoTQ7DLD79giKtjDR66ZblH3pgZKc5mweTjYaNOEqVTP9lwzgV1vAcbprnj4JEHP+uepf8qhXMQEd5wEgmKnctF1YvaPNGY32CwWcMsqvK9Uh9W2ODh3G+KxEC7g5tBV/LQb4BSmccwoR09MJ08pu64mH/AJanjhvQEZjv7gu4AP+GMUClQyV4Zcl2FEn386V1yGmg9LMzvGC0gL8wYRTzb4STRDjBQ63I/WpWus/CsGhHt5l54ROpO18l+XiObbI3/tRpcfV+4Uyiz9waqCE4oRze1eQ8RZDXVHXTpd/bFXHPoRI4+NmtJeHyZtup8TUDkaGhOwwPa13reqAQZq5lnFutEUNneH5Xl3u+NQCdA1XVWvra9E7tFn0FLgNjvRk6aAYFUWH7+rEijBmzcFQfkwEN0cs3TY+oUhIt89YvhSwPDl5pU7z/Ug+vuM48YEGOfhKum9zm9d3rT1lhoe/ExcoQTedG+KBv4Meww7vTzk2fexBUvBDXlxE3b2/SVNNl0C/ZUCvqElnLwWgg4JUbnLc+wKgPtXZ5gQMbSte2ykTK70J+S+pBDhbmBXYFqbTSyCkJtlU4GNq6vTlNvFNRQJARm9viKmkLUkHQbVICslZamzfhSzC71GWGC2rrYKuzIvhMdq/FAQcyocg8QBIpnA0is="
    - CC_TEST_REPORTER_ID=c923ee28c767fab893630ca20ea78949069bbeb216ecf65a5fc8bc24ea3e3f18
    - FLUTTER_TEST=true
  matrix:
    - ONLY_RUN_CODE_VERSION=STABLE ONLY_RUN_DART_VERSION=STABLE

addons:
  apt:
    packages:
      - libsecret-1-dev
      - libstdc++6
      - gcc-4.8

before_install:
  - echo Misc setup
  - export ELECTRON_NO_ATTACH_CONSOLE=1
  - export TRAVIS_COMMIT_AUTHOR="$(git log -1 $TRAVIS_COMMIT --pretty="%aN")"
  - gem install dpl
  - if [ $TRAVIS_OS_NAME == "linux" ]; then
      export CXX="g++-4.8" CC="gcc-4.8" DISPLAY=:99.0;
      sh -e /etc/init.d/xvfb start;
      sleep 3;
    fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then
      export DART_OS=macos;
    else
      export DART_OS=linux;
    fi
  - echo Setting variables...
  - if [[ $ONLY_RUN_DART_VERSION == "STABLE" ]]; then
      export DART_CHANNEL=stable;
      export FLUTTER_BRANCH=beta-with-verbose-flutter-tester;
    else
      export DART_CHANNEL=dev;
      export FLUTTER_BRANCH=beta-with-verbose-flutter-tester;
    fi
  - mkdir with\ spaces
  - cd with\ spaces
  - echo Downloading Dart and Flutter...
  - curl https://storage.googleapis.com/dart-archive/channels/$DART_CHANNEL/release/latest/sdk/dartsdk-$DART_OS-x64-release.zip > dart-sdk.zip
  - unzip dart-sdk.zip > /dev/null
  - git clone -b $FLUTTER_BRANCH https://github.com/DanTup/flutter.git
  - export FLUTTER_ROOT=`pwd`/flutter
  - export DART_SDK_PATHS=`pwd`/dart-sdk/bin:`pwd`/flutter/bin
  - export PATH=`pwd`/dart-sdk/bin:`pwd`/flutter/bin:$PATH
  - echo Configuring Dart and Flutter...
  - flutter/bin/flutter config --no-analytics
  - flutter/bin/flutter update-packages
  - dart-sdk/bin/dart --version
  - flutter/bin/flutter --version
  - node --version
  - npm --version
  - flutter/bin/flutter doctor
  - export FLUTTER_PATH=`pwd`/flutter
  - export DART_PATH=`pwd`/dart-sdk
  - cd ..

install:
  - npm install --depth 0

script:
  - npm run vscode:prepublish
  # - npm test
  - cd /Users/travis/build/Dart-Code/Dart-Code/test/test_projects/flutter_hello_world
  - flutter --suppress-analytics run --machine -v -t lib/main.dart -d flutter-tester --start-paused
  # flutter_tester processes are leaked by tests that terminate early:
  # https://github.com/Dart-Code/Dart-Code/issues/1175
  # This doesn't affect end users (since normally we're not spawning their device) so we
  # just kill them all and then to a check for remaining Dart processes (we still want
  # to ensure we're not leaking anything else).
  - killall flutter_tester || true
  - ps -ax | grep -v grep | grep dart || true
  - if [[ $(pgrep -x dart) ]]; then
      echo 'DART WAS FOUND';
      travis_result 1;
    fi;

after_script:
  - if [ $TRAVIS_PULL_REQUEST = "false" ]; then
      dpl --provider=s3 --bucket="test-results.dartcode.org" --skip_cleanup=true --local-dir=".test_results" --upload-dir="$TRAVIS_BRANCH/$TRAVIS_COMMIT/$TRAVIS_OS_NAME" --acl=public_read --default_text_charset=utf-8;
      dpl --provider=s3 --bucket="test-results.dartcode.org" --skip_cleanup=true --local-dir=".dart_code_test_logs" --upload-dir="logs/$TRAVIS_BRANCH/$TRAVIS_COMMIT/$TRAVIS_OS_NAME" --acl=public_read --default_text_charset=utf-8;
    fi
