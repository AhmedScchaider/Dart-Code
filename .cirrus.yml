blocks:
  install_packages_mac_linux: &install_packages_mac_linux |
    if [[ "$OS" == "linux" ]]; then
      apt-get update
      apt-get -y install curl wget git ruby2.5 gnupg
      curl -sL https://deb.nodesource.com/setup_8.x | bash -
      apt-get -y install nodejs
      gem install dpl
    fi;
    if [[ "$OS" == "darwin" ]]; then
      brew install node
      sudo gem install dpl
    fi;

  install_dart_mac_linux: &install_dart_mac_linux |
    mkdir -p "$DART_PATH"
    cd "$DART_PATH"
    curl https://storage.googleapis.com/dart-archive/channels/$DART_CHANNEL/release/latest/sdk/dartsdk-$DART_OS-x64-release.zip > dart-sdk.zip
    unzip dart-sdk.zip > /dev/null
    mv dart-sdk/* .
    cd "$CIRRUS_WORKING_DIR"

  vscode_setup_mac_linux: &vscode_setup_mac_linux |
    if [[ "$OS" == "linux" ]]; then
      curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
      mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
      sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
      apt-get update
      apt-get -y install code code-insiders libasound2 libxkbfile-dev pkg-config libsecret-1-dev libxss1 libgconf-2-4 dbus xvfb libgtk-3-0
    fi;
  
  vscode_xvfb_background: &vscode_xvfb_background |
    if [[ "$OS" == "linux" ]]; then
      Xvfb :99
    fi;

  print_versions: &print_versions |
    dart --version
    node --version
    npm --version
  install_npm_packages: &install_npm_packages |
    npm install --depth 0 --unsafe-perm

  compile: &compile npm run vscode:prepublish
  test: &test npm test
  
task:
  env:
    DART_PATH: "/tmp/with spaces/dart"
    PATH: "$DART_PATH/bin:$PATH"
    DEBIAN_FRONTEND: noninteractive
    ELECTRON_NO_ATTACH_CONSOLE: 1
    CXX: "g++-4.8"
    CC: "gcc-4.8" 
    DISPLAY: ":99.0"

  matrix:
    - name: Linux, Dart Stable, Code Stable
      container:
        image: ubuntu:bionic
      env:
        DART_OS: linux
        DART_CHANNEL: stable
        CODE_VERSION: stable
  
  install_packages_script:         *install_packages_mac_linux
  vscode_setup_script:             *vscode_setup_mac_linux
  vscode_xvfb_background_script:   *vscode_xvfb_background
  install_dart_script:             *install_dart_mac_linux
  print_versions_script:           *print_versions
  install_npm_packages_script:     *install_npm_packages
  compile_script:                  *compile
  test_script:                     *test
